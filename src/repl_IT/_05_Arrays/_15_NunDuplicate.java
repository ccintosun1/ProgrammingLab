package repl_IT._05_Arrays;public class _15_NunDuplicate {    public static void main(String[] args) {        int[] nums = {1, 2, 3, 4, 3, 4, 1};        int more = 0;        int result = 0;        String m = null;        for (int i = 0; i < nums.length; i++) {            int count = 0;            for (int j = 0; j < nums.length; j++) {                if (nums[i] == nums[j]) {                    count++;                }            }            if (count == 1) {                more++;                if (more == 1) {                    result = nums[i];                }            }            if (count == 1 && more > 1) {                m = "" + result + " (more than one unique number. but " + result + " is the first)";            }        }        if (more == 1) {            System.out.print(result);        } else if (more > 1) {            System.out.println(m);        }    }}/*### Given an `int []` `nums` that has duplicate numbers, which means each numbers is found twice in the array. Find and print the non-duplicate number, which mean the ones that does not have two occurrences of it. If there is more than one, return the first unique in array!Main topics: arrays, primitive datatypes, index, operators, loops, if statements, counterExample:```Input:  [1, 2, 3, 4, 3, 4, 1]Output:  2``````Input:  [6, 44, 6, 4, 3, 4, 1]Output:  44 (more than one unique number. but 44 is the first)``` */